{{- $dbPassword := .Values.db.password -}}
{{- $passwordSecretRef := .Values.db.passwordSecretRef -}}
{{- if and (not $dbPassword) (not $passwordSecretRef) }}
{{- fail "Either db.password or db.passwordSecretRef must be provided!" }}
{{- end }}

{{- $replicaCount := .Values.replicaCount | required "A valid .Values.replicaCount is required!" -}}
{{- $imageRepository := .Values.image.repository | required "A valid .Values.image.repository is required!" -}}
{{- $imageTag := .Values.image.tag | required "A valid .Values.image.tag is required!" -}}
{{- $imagePullPolicy := .Values.image.pullPolicy | required "A valid .Values.image.pullPolicy is required!" -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "unicorn-history-server.fullname" . }}
  labels:
    {{- include "unicorn-history-server.labels" . | nindent 4 }}
    {{- with .Values.global.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.global.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ $replicaCount }}
  selector:
    matchLabels:
      {{- include "unicorn-history-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "unicorn-history-server.labels" . | nindent 8 }}
        {{- with .Values.global.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      containers:
        - name: "unicorn-history-server"
          image: "{{ include "unicorn-history-server.image" . }}"
          imagePullPolicy: "{{ $imagePullPolicy }}"
          args:
            - "--config"
            - "/app/config/config.yaml"
          volumeMounts:
            - mountPath: /app/config
              name: config
          env:
            - name: UHS_DB_PASSWORD
              {{- if $passwordSecretRef }}
              valueFrom:
                secretKeyRef:
                  name: {{ $passwordSecretRef }}
                  key: UHS_DB_PASSWORD
              {{- else }}
              value: {{ $dbPassword | quote }}
              {{- end }}
          ports:
            - containerPort: {{ .Values.uhs.port }}
              name: http
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ws/v1/health/liveness
              port: http
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /ws/v1/health/readiness
              port: http
            initialDelaySeconds: 15
            periodSeconds: 20
      volumes:
        - name: config
          configMap:
            name: {{ include "unicorn-history-server.fullname" . }}
